(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{167:function(t,a,e){t.exports=e.p+"assets/img/sjlx.35d4aeeb.png"},321:function(t,a,e){t.exports=e.p+"assets/img/2.87eee11f.png"},379:function(t,a,e){"use strict";e.r(a);var n=e(28),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"java环境搭建与基本语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java环境搭建与基本语法"}},[t._v("#")]),t._v(" Java环境搭建与基本语法")]),t._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#java环境搭建与基本语法"}},[t._v("Java环境搭建与基本语法")]),n("ul",[n("li",[n("a",{attrs:{href:"#jdk下载"}},[t._v("JDK下载")]),n("ul",[n("li",[n("a",{attrs:{href:"#判断java是否安装成功"}},[t._v("判断Java是否安装成功")])]),n("li",[n("a",{attrs:{href:"#配置环境变量"}},[t._v("配置环境变量")])]),n("li",[n("a",{attrs:{href:"#命令行"}},[t._v("命令行")])])])]),n("li",[n("a",{attrs:{href:"#eclip"}},[t._v("eclip")])]),n("li",[n("a",{attrs:{href:"#标识符"}},[t._v("标识符")])]),n("li",[n("a",{attrs:{href:"#java数据类型"}},[t._v("java数据类型")]),n("ul",[n("li",[n("a",{attrs:{href:"#自动类型转换顺序"}},[t._v("自动类型转换顺序")])]),n("li",[n("a",{attrs:{href:"#强制数据类型转换"}},[t._v("强制数据类型转换")])]),n("li",[n("a",{attrs:{href:"#常量"}},[t._v("常量")])])])]),n("li",[n("a",{attrs:{href:"#运算符"}},[t._v("运算符")]),n("ul",[n("li",[n("a",{attrs:{href:"#自增自减运算符"}},[t._v("自增自减运算符")])]),n("li",[n("a",{attrs:{href:"#逻辑运算符"}},[t._v("逻辑运算符")])])])]),n("li",[n("a",{attrs:{href:"#数组"}},[t._v("数组")]),n("ul",[n("li",[n("a",{attrs:{href:"#交换a-b的值"}},[t._v("交换a,b的值")])]),n("li",[n("a",{attrs:{href:"#冒泡排序"}},[t._v("冒泡排序")])]),n("li",[n("a",{attrs:{href:"#二维数组"}},[t._v("二维数组")])])])]),n("li",[n("a",{attrs:{href:"#流程控制语句"}},[t._v("流程控制语句")]),n("ul",[n("li",[n("a",{attrs:{href:"#switch结构"}},[t._v("switch结构")])]),n("li",[n("a",{attrs:{href:"#while"}},[t._v("while")])]),n("li",[n("a",{attrs:{href:"#do-while"}},[t._v("do-while")])]),n("li",[n("a",{attrs:{href:"#for循环"}},[t._v("for循环")]),n("ul",[n("li",[n("a",{attrs:{href:"#求-1-2-3-4-5-25-的和"}},[t._v("求 1!+2!+3!+4!+5!+...+25!的和")])])])]),n("li",[n("a",{attrs:{href:"#break跳出循环"}},[t._v("break跳出循环")])]),n("li",[n("a",{attrs:{href:"#continue语句"}},[t._v("continue语句")])])])]),n("li",[n("a",{attrs:{href:"#方法"}},[t._v("方法")]),n("ul",[n("li",[n("a",{attrs:{href:"#方法参数"}},[t._v("方法参数")]),n("ul",[n("li",[n("a",{attrs:{href:"#数组为参数"}},[t._v("数组为参数")])]),n("li",[n("a",{attrs:{href:"#方法重载"}},[t._v("方法重载")])]),n("li",[n("a",{attrs:{href:"#基本类型数据传值与引用类型数据传值"}},[t._v("基本类型数据传值与引用类型数据传值")])]),n("li",[n("a",{attrs:{href:"#可变参数列表"}},[t._v("可变参数列表")])])])])])]),n("li",[n("a",{attrs:{href:"#javadoc命令"}},[t._v("javadoc命令")]),n("ul",[n("li",[n("a",{attrs:{href:"#根据文档注释，生成帮助文档"}},[t._v("根据文档注释，生成帮助文档")])])])])])])])]),n("p"),t._v(" "),n("h2",{attrs:{id:"jdk下载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jdk下载"}},[t._v("#")]),t._v(" JDK下载")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://www.oracle.com/java/technologies/downloads/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JDK下载地址"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("本版说明")]),t._v(" "),n("ol",[n("li",[t._v("installer：安装程序，执行exe文件即可以安装。")]),t._v(" "),n("li",[t._v("MSI Installer:安装程序，执行安装。")]),t._v(" "),n("li",[t._v("Compressed Archive ：二进制包，已编译好的可直接使用的程序，解压缩后，点击bin目录下的.sh或者.bat执行文件即可使用。")])]),t._v(" "),n("h3",{attrs:{id:"判断java是否安装成功"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#判断java是否安装成功"}},[t._v("#")]),t._v(" 判断Java是否安装成功")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("cmd > java -version \n")])])]),n("h3",{attrs:{id:"配置环境变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置环境变量"}},[t._v("#")]),t._v(" 配置环境变量")]),t._v(" "),n("ol",[n("li",[t._v("path > 添加java安装的bin目录")]),t._v(" "),n("li",[t._v("JAVA_HOME > 添加java安装bin的上一级目录 【有些地方要用】")])]),t._v(" "),n("h3",{attrs:{id:"命令行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命令行"}},[t._v("#")]),t._v(" 命令行")]),t._v(" "),n("p",[t._v("cmd中要运行java文件，需要先将java文件编译，通过javac xxx.java，然后会生成一个xxx.class文件，在通过 java xxxx 运行文件。")]),t._v(" "),n("h2",{attrs:{id:"eclip"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eclip"}},[t._v("#")]),t._v(" eclip")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://www.eclipse.org/downloads/packages/",target:"_blank",rel:"noopener noreferrer"}},[t._v("eclip下载"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"标识符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#标识符"}},[t._v("#")]),t._v(" 标识符")]),t._v(" "),n("p",[t._v("命名规则：字母、数字、下划线和美元符（$）组成，不能以数字开头")]),t._v(" "),n("h2",{attrs:{id:"java数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java数据类型"}},[t._v("#")]),t._v(" java数据类型")]),t._v(" "),n("p",[n("img",{attrs:{src:e(167),alt:"An image"}}),t._v("\n8个")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("数据类型")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),n("th",{staticStyle:{"text-align":"right"}},[t._v("字节")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("byte")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("字节型")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("1")])]),t._v(" "),n("tr",[n("td",[t._v("short")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("短整型")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("2")])]),t._v(" "),n("tr",[n("td",[t._v("int")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("整型")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("4")])]),t._v(" "),n("tr",[n("td",[t._v("long")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("长整型")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("8")])]),t._v(" "),n("tr",[n("td",[t._v("float")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("单精度浮点型")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("4")])]),t._v(" "),n("tr",[n("td",[t._v("double")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("双精度浮点型")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("8")])]),t._v(" "),n("tr",[n("td",[t._v("char")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("字符型")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("2")])])])]),t._v(" "),n("p",[t._v("基本类型数据的存储在内存，划分区域 栈、堆、常量池")]),t._v(" "),n("p",[t._v("int类型在栈")]),t._v(" "),n("p",[t._v("字符型值，单引号  表示 单个字符，多个字符会报错。")]),t._v(" "),n("p",[t._v("字符串不是基本数据类型，是类")]),t._v(" "),n("h3",{attrs:{id:"自动类型转换顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自动类型转换顺序"}},[t._v("#")]),t._v(" 自动类型转换顺序")]),t._v(" "),n("p",[n("img",{attrs:{src:e(321),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"强制数据类型转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#强制数据类型转换"}},[t._v("#")]),t._v(" 强制数据类型转换")]),t._v(" "),n("p",[t._v("如果A类型的数据表示范围比B类型大，则将A赋值给B，需要强制类型转换。\n格式： （数据类型）数值")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(" double d = 123.4;\n float f = (float)d;\n")])])]),n("h3",{attrs:{id:"常量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[t._v("#")]),t._v(" 常量")]),t._v(" "),n("p",[t._v("对于基础类型来说，用final修饰后其值不可以改变。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("final double PI = 3.14;\n")])])]),n("h2",{attrs:{id:"运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),n("ol",[n("li",[t._v("算数运算符")]),t._v(" "),n("li",[t._v("赋值运算符")]),t._v(" "),n("li",[t._v("关系运算符")]),t._v(" "),n("li",[t._v("逻辑运算符")]),t._v(" "),n("li",[t._v("条件运算符")]),t._v(" "),n("li",[t._v("位运算符")])]),t._v(" "),n("h3",{attrs:{id:"自增自减运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自增自减运算符"}},[t._v("#")]),t._v(" 自增自减运算符")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("表达式")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("执行方式")]),t._v(" "),n("th",{staticStyle:{"text-align":"right"}},[t._v("结果(num1=1)")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("num2= + +num1;")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("num1=num1+1;")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("num1=2;")])]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("num2=num1;")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("num2=2;")])]),t._v(" "),n("tr",[n("td",[t._v("num2=num1++;")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("num2=num1;")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("num1=2;")])]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("numl=num1+1;")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("num2=1;")])]),t._v(" "),n("tr",[n("td",[t._v("num2=--num1;")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("num1=num1-1;")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("num1=0;")])]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("num2=num1;")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("num2=0;")])])])]),t._v(" "),n("p",[t._v("++ 使得运算顺序不一样")]),t._v(" "),n("p",[t._v("“y = ++ x”：先计算x，再赋值给y。")]),t._v(" "),n("p",[t._v("“y = x++”：先赋值y，再计算x。")]),t._v(" "),n("h3",{attrs:{id:"逻辑运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),n("p",[t._v("包括五种：")]),t._v(" "),n("ol",[n("li",[t._v("&&")]),t._v(" "),n("li",[t._v("&")]),t._v(" "),n("li",[t._v("||")]),t._v(" "),n("li",[t._v("|")]),t._v(" "),n("li",[t._v("!")])]),t._v(" "),n("p",[t._v("“ && ”、“ || ”是短路运算符，只要第一个表达式的值就能决定表达式最后的结果，运算符右边的表达式就不执行了。")]),t._v(" "),n("p",[t._v("但“&”、“|”都会执行双边表达式")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("public class ADAS {\n    public static void main(String[] args) {\n        int n = 3;\n        boolean b = (3<7)||((n++)<3);\n        System.out.println(b);\n        System.out.println(n);\n    }\n}\n// true 3    \n// n++没有执行\n")])])]),n("table",[n("thead",[n("tr",[n("th",[t._v("运算符")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("()")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("圆括号")])]),t._v(" "),n("tr",[n("td",[t._v("!,++,--")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("逻辑非,自增,自减")])]),t._v(" "),n("tr",[n("td",[t._v("*,/,%")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("乘法,除法,取余")])]),t._v(" "),n("tr",[n("td",[t._v("+,-")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("加法,减法")])]),t._v(" "),n("tr",[n("td",[t._v("<,<=,>,>=")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("小于,小于等于,大于,大于等于")])]),t._v(" "),n("tr",[n("td",[t._v("==,!=")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("等于,不等于")])]),t._v(" "),n("tr",[n("td",[t._v("&&")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("逻辑与")])]),t._v(" "),n("tr",[n("td",[t._v("||")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("逻辑或")])]),t._v(" "),n("tr",[n("td",[t._v("=,+=,*=,/+,%=,-=")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("赋值运算符")])])])]),t._v(" "),n("h2",{attrs:{id:"数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),n("p",[t._v("数组是相同类型的数据按顺序组成的一种引用数据类型，生命数组的时候必须设置长度，存储在连续的内存空间。数组默认值为“0”。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("int[] arr;\narr = new int[10];\n\n//数组赋值  并不与js中要用“{}”\nint [] b = {1,2,3,45}\n")])])]),n("p",[t._v("但字符串数组的声明有些不同啊")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('    public static void main(String[] args) {\n        String a[] = {"1","23","34","s"};\n        for(String n:a){\n            System.out.println(n);\n        }\n    }\n')])])]),n("h3",{attrs:{id:"交换a-b的值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#交换a-b的值"}},[t._v("#")]),t._v(" 交换a,b的值")]),t._v(" "),n("p",[t._v("设置中间变量temp")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("int a=3,b=5;\nint temp;\ntemp = a;a=b;b=temp;\n")])])]),n("h3",{attrs:{id:"冒泡排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序"}},[t._v("#")]),t._v(" 冒泡排序")]),t._v(" "),n("ol",[n("li",[t._v("比较相邻的元素。如果第一个比第二个大，就交换他们两个。")]),t._v(" "),n("li",[t._v("对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。")]),t._v(" "),n("li",[t._v("针对所有的元素重复以上的步骤，除了最后一个。")]),t._v(" "),n("li",[t._v("持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。")])]),t._v(" "),n("p",[t._v("比如从小到达排，N个元素，每一轮都能排出这轮的最大值，所以外循环只需要N-1轮就能排好。")]),t._v(" "),n("p",[t._v("排好一轮，就忽略一个元素，所以在内循环中每轮都会少一个元素。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("public class ADAS {\n    public static void main(String[] args) {\n        int temp;\n        int[] a = {11,2,31,5};\n        for(int i=0;i<a.length-1;i++){\n            for(int j=0;j<a.length-i-1;j++){\n                if(a[j]>a[j+1]){\n                    temp = a[j];\n                    a[j] = a[j+1];\n                    a[j+1] = temp;\n                }\n            }\n        }\n        for(int n:a){\n            System.out.println(n);\n        }\n\n    }\n}\n")])])]),n("h3",{attrs:{id:"二维数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二维数组"}},[t._v("#")]),t._v(" 二维数组")]),t._v(" "),n("p",[t._v("二维数组的声明 有三种：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("int arr[][];\n\nint [][] arr1;\n\nint [] arr2[];\n")])])]),n("p",[t._v("声明时：行数要确定、列数可省略")]),t._v(" "),n("p",[t._v("多维数组的打印")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("import java.util.Arrays;\n\npublic class ADAS {\n    public static void main(String[] args) {\n        int Arr[][];\n        int [][] Arr1;\n        int [] Arr2[];\n\n        Arr = new int[3][];\n        //直接输出数组是看不到数组的值的，需要先转为字符串\n        System.out.println(Arrays.toString(Arr));\n\n        //声明数组的同时进行创建 3*3的数组\n        //必须指定行数，列数可以不指定\n        int[][] Arr3 = new int[3][];   //也可以直接赋值 int[][] Arr3 = {{1,2},{2,3},{3,4}};\n\n        //每行的列数是可以不一样的\n        Arr2 = new int[3][];\n        Arr2[0] = new int[2];\n        Arr2[1] = new int[3];\n        \n        //Java.Arrays.deepToString方法可以将多维数组打印出来，实例化后的数组默认值为0，否则为null\n        System.out.println(Arrays.deepToString(Arr2));\n    }\n}\n")])])]),n("h2",{attrs:{id:"流程控制语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#流程控制语句"}},[t._v("#")]),t._v(" 流程控制语句")]),t._v(" "),n("p",[t._v("三大流程控制语句：顺序、选择、循环")]),t._v(" "),n("p",[t._v("顺序：Java是顺序执行语句的")]),t._v(" "),n("p",[t._v("选择：")]),t._v(" "),n("ol",[n("li",[t._v("if结构")]),t._v(" "),n("li",[t._v("switch结构")])]),t._v(" "),n("p",[t._v("循环：")]),t._v(" "),n("ol",[n("li",[t._v("while")]),t._v(" "),n("li",[t._v("do-while")]),t._v(" "),n("li",[t._v("for")])]),t._v(" "),n("h3",{attrs:{id:"switch结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#switch结构"}},[t._v("#")]),t._v(" switch结构")]),t._v(" "),n("p",[t._v("其结构与JavaScript类似，")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("switch(表达式){\n\tcase 常量表达式1:\n\t\t语句1;break;\n\tdefault:\n\t\t语句;\n}\n")])])]),n("h3",{attrs:{id:"while"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#while"}},[t._v("#")]),t._v(" while")]),t._v(" "),n("ol",[n("li",[t._v("n的值必须初始化")]),t._v(" "),n("li",[t._v("循环变量n的值必须被改变")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("//\nint n = 1;\nwhile(n<5){\n\tn++;\n}\n")])])]),n("h3",{attrs:{id:"do-while"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#do-while"}},[t._v("#")]),t._v(" do-while")]),t._v(" "),n("p",[t._v("do-while循环至少执行一次")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("int n = 1;\ndo{\n\tn++;\n}while(n<5)\n")])])]),n("h3",{attrs:{id:"for循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#for循环"}},[t._v("#")]),t._v(" for循环")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("char[] a = {1,3,5,12,51};\nfor(int n:a){\n\tSystem.out.println(n);\n}\n")])])]),n("h4",{attrs:{id:"求-1-2-3-4-5-25-的和"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#求-1-2-3-4-5-25-的和"}},[t._v("#")]),t._v(" 求 1!+2!+3!+4!+5!+...+25!的和")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("public class ADAS {\n    \n    public static void main(String[] args) {\n        //long长整型，int范围小，会溢出\n        long sum = 0;\n        for(int i=1;i<=25;i++){\n            long s = 1;\n            for(int j=1;j<=i;j++){\n                s = s*j;\n            }\n            sum += s;\n        }\n        System.out.println(sum);\n    }\n}\n")])])]),n("h3",{attrs:{id:"break跳出循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#break跳出循环"}},[t._v("#")]),t._v(" break跳出循环")]),t._v(" "),n("ol",[n("li",[t._v("break语句可以结束当前循环的执行")]),t._v(" "),n("li",[t._v("breaj后面的语句不会被执行")]),t._v(" "),n("li",[t._v("在多重循环中，break语句只向外跳一层")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("public class ADAS {\n    public static void main(String[] args) {\n        int n = 1;\n        for(;;){       \n            if(n==10)break;\n            System.out.println(n);\n            n++;\n        }\n\x3c!-- \twhile(true){\n            if(n==10)break;\n            System.out.println(n);\n            n++;\n        } --\x3e\n    }\n}\n")])])]),n("h3",{attrs:{id:"continue语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#continue语句"}},[t._v("#")]),t._v(" continue语句")]),t._v(" "),n("ol",[n("li",[t._v("continue语句只能用在循环里")]),t._v(" "),n("li",[t._v("continue语句可以结束当前循环的执行，但是要继续下一次循环的执行")])]),t._v(" "),n("h2",{attrs:{id:"方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("访问修饰符 返回类型 方法名(参数列表){\n\t方法体;\n}\npublci static void main(String[] args)\n")])])]),n("p",[t._v("public访问修饰符\nvoid方法返回值类型\nstatic 静态信息")]),t._v(" "),n("h3",{attrs:{id:"方法参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法参数"}},[t._v("#")]),t._v(" 方法参数")]),t._v(" "),n("p",[t._v("参数的类型要声明")]),t._v(" "),n("h4",{attrs:{id:"数组为参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组为参数"}},[t._v("#")]),t._v(" 数组为参数")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("public void printArray(int[] arr){}\n")])])]),n("h4",{attrs:{id:"方法重载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法重载"}},[t._v("#")]),t._v(" 方法重载")]),t._v(" "),n("p",[t._v("方法名相同，返回参数可以不同，但参数必须不一样（数据类型不一样，参数数量不同，有一即可）。")]),t._v(" "),n("p",[t._v("调用的时候根据传参不同，调用不同的方法。")]),t._v(" "),n("h4",{attrs:{id:"基本类型数据传值与引用类型数据传值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本类型数据传值与引用类型数据传值"}},[t._v("#")]),t._v(" 基本类型数据传值与引用类型数据传值")]),t._v(" "),n("p",[t._v("基本类型数据，方法不改变数据的值；")]),t._v(" "),n("p",[t._v("而引用类型，方法操作数据后，会改变原有数据值；")]),t._v(" "),n("p",[t._v("基本数据类型：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("public class ADAS {\n    public int update(int n){\n        return n+1;\n    }\n    public int xx1(int n){\n        int s = update(n)+2;   // 在主方法外，同一个类里的方法调用其他方法，不用声明一个类，直接方法名字调用即可。\n                               // 在主方法中调用类里的方法，需要new.\n        return s;\n    }\n    public static void main(String[] args) {\n        int lcs = 6;\n        ADAS someone = new ADAS();\n        System.out.println(someone.xx1(lcs));\n        System.out.println(lcs);     //基础类型数据数据，不改变原数据值。\n    }\n}\n")])])]),n("h5",{attrs:{id:"引用类型的值会被改变"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#引用类型的值会被改变"}},[t._v("#")]),t._v(" 引用类型的值会被改变")]),t._v(" "),n("ol",[n("li",[t._v("但若是数据是引用型数据，则对数据的操作会改变原数据值。类似的，对象也会被修改")]),t._v(" "),n("li",[t._v("返回值是数组类型")]),t._v(" "),n("li",[t._v("如何打印数组")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("import java.util.Arrays;\n\npublic class ADAS {\n    public int[] update(int[] a){        //返回\n        a[2] = 9;\n        return a;\n    }\n\n    public static void main(String[] args) {\n        int[] lcs = {1,2,3,4,5};\n        ADAS someone = new ADAS();\n        int[] b = someone.update(lcs);\n        System.out.println(Arrays.toString(b));  //[1, 2, 9, 4, 5]\n        System.out.println(Arrays.toString(lcs));//[1, 2, 9, 4, 5]  原数组的值被改变了\n    }\n}\n")])])]),n("h4",{attrs:{id:"可变参数列表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#可变参数列表"}},[t._v("#")]),t._v(" 可变参数列表")]),t._v(" "),n("p",[t._v("参数的数量是不确定的。")]),t._v(" "),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),n("p",[t._v("一个方法只能有一个可变参数；\n如果函数有多个参数，可变参数要放到最后;")]),t._v(" "),n("p",[t._v("带有可变参数，若是有重复方法名，不是方法重载，而是重新定义；")]),t._v(" "),n("p",[t._v("出现方法重载时，可变参数列表所在的方法是最后被调用的；")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("public class ADAS {\n    public int sum(int... a){\n        int res = 0;\n       for(int i:a){\n           res += i;\n       }\n       return res;\n    }\n\n    public static void main(String[] args) {\n        ADAS lcs = new ADAS();\n        int x = lcs.sum(1,3,4,5);\n        System.out.println(x);\n\t\t\n\t\tint[] x1 = {1,3,4,5};\n        int xx = lcs.sum(x1);   //可变参数 传的是数组\n        System.out.println(xx);\n    }\n}\n")])])]),n("h2",{attrs:{id:"javadoc命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javadoc命令"}},[t._v("#")]),t._v(" javadoc命令")]),t._v(" "),n("h3",{attrs:{id:"根据文档注释，生成帮助文档"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#根据文档注释，生成帮助文档"}},[t._v("#")]),t._v(" 根据文档注释，生成帮助文档")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("> javadoc -d doc XXX.java\n")])])]),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/vbirdbest/article/details/80296136",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),n("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);