(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{167:function(t,a,e){t.exports=e.p+"assets/img/sjlx.35d4aeeb.png"},319:function(t,a,e){t.exports=e.p+"assets/img/bzl1.e282d29f.jpg"},384:function(t,a,e){"use strict";e.r(a);var s=e(28),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"包装类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包装类"}},[t._v("#")]),t._v(" 包装类")]),t._v(" "),s("p",[t._v("java数据类型分为 基本数据类型 和 引用数据类型。")]),t._v(" "),s("p",[s("img",{attrs:{src:e(167),alt:"An image"}})]),t._v(" "),s("h2",{attrs:{id:"基本数据类型是不具有对象特征的，即没有-属性-和-方法、对象化的交互。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型是不具有对象特征的，即没有-属性-和-方法、对象化的交互。"}},[t._v("#")]),t._v(" 基本数据类型是不具有对象特征的，即没有 属性 和 方法、对象化的交互。")]),t._v(" "),s("h2",{attrs:{id:"_1-包装类作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-包装类作用"}},[t._v("#")]),t._v(" 1 包装类作用")]),t._v(" "),s("p",[t._v("包装类就是让基本数据类型具有属性、方法，可以对象化交互。")]),t._v(" "),s("p",[t._v("|基本类型\t|对应的引用类型\t\t|\n|boolean\t|java.lang.Boolean\t|\n|byte\t\t|java.lang.Byte\t\t|\n|short\t\t|java.lang.Short\t|\n|int\t\t|java.lang.Integer\t|\n|long\t\t|java.lang.Long\t\t|\n|float\t\t|java.lang.Float\t|\n|double\t\t|java.lang.Double\t|\n|char\t\t|java.lang.Character|")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_2-装箱与拆箱-基本数据类型的装箱与拆箱"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-装箱与拆箱-基本数据类型的装箱与拆箱"}},[t._v("#")]),t._v(" 2 装箱与拆箱 & 基本数据类型的装箱与拆箱")]),t._v(" "),s("h3",{attrs:{id:"_2-1-装箱"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-装箱"}},[t._v("#")]),t._v(" 2.1 装箱")]),t._v(" "),s("blockquote",[s("p",[t._v("装箱：把 基本数据类型 装换成 包装类")])]),t._v(" "),s("p",[t._v("装箱有两种方法：")]),t._v(" "),s("ol",[s("li",[t._v("自动装箱")]),t._v(" "),s("li",[t._v("手动装箱")])]),t._v(" "),s("p",[t._v("自动装箱：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("int t1 = 2;\nInteger t2 = t1;\n")])])]),s("p",[t._v("手动装箱：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Integer t3 = new Interger(t1);\n")])])]),s("h3",{attrs:{id:"_2-2-拆箱"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-拆箱"}},[t._v("#")]),t._v(" 2.2 拆箱")]),t._v(" "),s("blockquote",[s("p",[t._v("拆箱：把 包装类 转换成 基本数据类型")])]),t._v(" "),s("p",[t._v("也分")]),t._v(" "),s("ol",[s("li",[t._v("自动拆箱")]),t._v(" "),s("li",[t._v("手动拆箱")])]),t._v(" "),s("p",[t._v("自动拆箱：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("int t4 = t2;\n")])])]),s("p",[t._v("手动拆箱：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("int t5 = t2.intValue();\ndoubel t6 = t2.doubleValue();\n")])])]),s("hr"),t._v(" "),s("h2",{attrs:{id:"_3-基本数据类型转字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-基本数据类型转字符串"}},[t._v("#")]),t._v(" 3 基本数据类型转字符串")]),t._v(" "),s("h3",{attrs:{id:"_3-1-基本数据类型字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-基本数据类型字符串"}},[t._v("#")]),t._v(" 3.1 基本数据类型字符串")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("int t1 = 2;\nString t2 = Integer.toString(t1);\n")])])]),s("h3",{attrs:{id:"_3-2-字符串转基本数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-字符串转基本数据类型"}},[t._v("#")]),t._v(" 3.2 字符串转基本数据类型")]),t._v(" "),s("h4",{attrs:{id:"_3-2-1-包装类的parse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-包装类的parse"}},[t._v("#")]),t._v(" 3.2.1 包装类的parse")]),t._v(" "),s("p",[t._v("[pɑːz]")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("int t3 = Integer.parseInt(t2);\n")])])]),s("h4",{attrs:{id:"_3-2-2-包装类的valueof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-包装类的valueof"}},[t._v("#")]),t._v(" 3.2.2 包装类的valueOf")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("int  t4 = Integer.valueOf(t2);\n")])])]),s("hr"),t._v(" "),s("h2",{attrs:{id:"_4-基本数据与包装类型的初始值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-基本数据与包装类型的初始值"}},[t._v("#")]),t._v(" 4 基本数据与包装类型的初始值")]),t._v(" "),s("p",[t._v("|基本类型\t|默认值\t\t|\n|boolean\t|false\t|\n|byte\t\t|0\t|\n|short\t\t|0\t|\n|int\t\t|0\t|\n|long\t\t|0L\t\t|\n|float\t\t|0.0f\t|\n|double\t\t|0.0d\t|\n|char\t\t|'\\u0000'|")]),t._v(" "),s("p",[t._v("包装类对象属性初始值是 null")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public class Cat {\n\tInteger month;    // null\n\tDouble weight;   // null\n\tdoubel xx;       // 0.0\n}\n")])])]),s("hr"),t._v(" "),s("h2",{attrs:{id:"_5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5"}},[t._v("#")]),t._v(" 5")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// 手动装箱\nInteger one = new Integer(100);\nInteger two = new Integer(100);\nSystem.out.printIn("one==two的结果"+(one == two));  //false\n// new 开辟新的内存空间\n// == 内存空间和值相同才为true\n// 因为one、two都用new，所以说false\n\n//自动拆箱\nInteger three = 100;\nSystem.out.printIn("three==100的结果"+(three == 100));  //true  这里有自动拆箱了\n\n//Integer four = 100;\n//实际上，上一句执行的是\nInteger four = Integer.valueOf(100);\nSystem.out.printIn("three==100的结果"+(three == four)); //true\n')])])]),s("p",[s("img",{attrs:{src:e(319),alt:"An image"}})]),t._v(" "),s("p",[t._v("以上对象常量池概念，除了对FFloat、Double包装类外，都适用。")]),t._v(" "),s("p",[t._v("即")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('Double d1 = Doubel.valueOf(100);\nSystem.out.printIn("d1==100的结果"+(d1 == 100)); //true\n')])])])])}),[],!1,null,null,null);a.default=r.exports}}]);